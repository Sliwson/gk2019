R""(
	#version 460 core

	out vec4 fragmentColor;

	in vec3 fragmentPosition;
	in vec3 normalVector;
	in vec2 textureCoordinates;

	uniform sampler2D shaderTexture;
	uniform vec3 lightPosition;
	uniform vec3 lightColor;

	void main()
	{
		float ambientFactor = 0.1;
	
		vec4 color = texture(shaderTexture, textureCoordinates);

		vec3 normal = normalize(normalVector);
		vec3 light = normalize(lightPosition - fragmentPosition);  
		float diffuseFactor = max(dot(normal, light), 0.0);

		vec3 ambient = ambientFactor * lightColor;
		vec3 diffuse = diffuseFactor * lightColor;

		fragmentColor = vec4((ambient + diffuse), 1.0) * color;
	} 
)""